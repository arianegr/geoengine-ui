@use '@angular/material' as mat;

// Material Base Styles
@include mat.core();

// Define Colors
$gfbio-darkblue: (
    50: #e7ebf4,
    100: #c2cee3,
    200: #99add1,
    300: #708cbf,
    400: #5273b1,
    500: #335aa3,
    600: #2e529b,
    700: #274891,
    800: #203f88,
    900: #142e77,
    A100: #adc0ff,
    A200: #7a98ff,
    A400: #4770ff,
    A700: #2e5dff,
    contrast: (
        50: rgba(black, 0.87),
        100: rgba(black, 0.87),
        200: rgba(black, 0.87),
        300: rgba(black, 0.87),
        400: rgba(white, 0.87),
        500: rgba(white, 0.87),
        600: rgba(white, 0.87),
        700: rgba(white, 0.87),
        800: rgba(white, 0.87),
        900: rgba(white, 0.87),
        A100: rgba(black, 0.87),
        A200: rgba(black, 0.87),
        A400: rgba(white, 0.87),
        A700: rgba(white, 0.87),
    ),
);

$gfbio-green: (
    50: #f0f6e9,
    100: #d9e8c8,
    200: #c0d9a4,
    300: #a7c97f,
    400: #94be63,
    500: #81b248,
    600: #79ab41,
    700: #6ea238,
    800: #649930,
    900: #518a21,
    A100: #dfffc7,
    A200: #c2ff94,
    A400: #a5ff61,
    A700: #97ff47,
    contrast: (
        50: rgba(black, 0.87),
        100: rgba(black, 0.87),
        200: rgba(black, 0.87),
        300: rgba(black, 0.87),
        400: rgba(black, 0.87),
        500: rgba(black, 0.87),
        600: rgba(black, 0.87),
        700: rgba(black, 0.87),
        800: rgba(white, 0.87),
        900: rgba(white, 0.87),
        A100: rgba(black, 0.87),
        A200: rgba(black, 0.87),
        A400: rgba(black, 0.87),
        A700: rgba(black, 0.87),
    ),
);

// Define App Theme
$geoengine-primary: mat.define-palette($gfbio-darkblue);
$geoengine-accent: mat.define-palette($gfbio-green, A200, A100, A400);
$geoengine-warn: mat.define-palette(mat.$red-palette);

// Create the theme object (a Sass map containing all of the palettes).
$geoengine-theme: mat.define-light-theme($geoengine-primary, $geoengine-accent, $geoengine-warn);

// Apply Angular Material Mixin to Color Theme
@include mat.all-component-themes($geoengine-theme);

:root {
    --geoengine-primary-color: #{mat.get-color-from-palette($geoengine-primary)};
    --geoengine-accent-color: #{mat.get-color-from-palette($geoengine-accent)};
    --geoengine-warn-color: #{mat.get-color-from-palette($geoengine-warn)};

    --geoengine-faded-accent-color: #{mat.get-color-from-palette($geoengine-accent, 0.32)};

    --geoengine-foreground-text-color: #{mat.get-color-from-palette(map-get($geoengine-theme, foreground), text)};
    --geoengine-foreground-secondary-text-color: #{mat.get-color-from-palette(map-get($geoengine-theme, foreground), secondary-text)};

    --geoengine-background-color: #{map-get(map-get($geoengine-theme, background), background)};
    --geoengine-background-hover-color: #{mat.get-color-from-palette(map-get($geoengine-theme, background), hover)};
    --geoengine-card-background-color: #{map-get(map-get($geoengine-theme, background), card)};

    font-family: Roboto, 'Helvetica Neue', sans-serif;
    font-size: 16px;
}

a {
    color: mat.get-color-from-palette(map-get($geoengine-theme, foreground), secondary-text);
}

index {
    body {
        margin: 0;
        padding: 0;
        color: whitesmoke;
        text-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
        background: #335aa3;
    }

    h1 {
        text-align: center;
        font-family: 'Pacifico', cursive;
        font-size: 20vh;
        height: 20vh;
        line-height: 20vh;
        margin: 30vh 0 0 0;
    }

    h1 span {
        background: url('assets/vat_logo.svg') right no-repeat;
        background-size: 18vh 18vh;
        height: calc(18vh - 1px);
        width: calc(18vh - 1px);
        border: 1px solid whitesmoke;
        border-radius: 18vh;
        display: inline-block;
        filter: drop-shadow(0 1px 3px rgba(0, 0, 0, 0.12)) drop-shadow(0 1px 2px rgba(0, 0, 0, 0.24));
    }

    div {
        text-align: center;
        font-size: 20vh;
        height: 20vh;
        line-height: 20vh;
        margin: 0 0 30vh 0;
    }

    @keyframes blink {
        0% {
            opacity: 0.2;
        }
        20% {
            opacity: 1;
        }
        100% {
            opacity: 0.2;
        }
    }

    .dots span {
        animation-name: blink;
        animation-duration: 1.4s;
        animation-iteration-count: infinite;
        animation-fill-mode: both;
    }

    .dots span:nth-child(2) {
        animation-delay: 0.2s;
    }

    .dots span:nth-child(3) {
        animation-delay: 0.4s;
    }
}
